
# Create processing_system7
cell xilinx.com:ip:processing_system7:5.5 ps_0 {
  PCW_IMPORT_BOARD_PRESET cfg/red_pitaya.xml
  PCW_USE_S_AXI_HP0 1
} {
  M_AXI_GP0_ACLK ps_0/FCLK_CLK0
  S_AXI_HP0_ACLK ps_0/FCLK_CLK0
}

# Create all required interconnections
apply_bd_automation -rule xilinx.com:bd_rule:processing_system7 -config {
  make_external {FIXED_IO, DDR}
  Master Disable
  Slave Disable
} [get_bd_cells ps_0]

# Create proc_sys_reset
cell xilinx.com:ip:proc_sys_reset:5.0 rst_0

# Create util_ds_buf
cell xilinx.com:ip:util_ds_buf:2.1 buf_0 {
  C_SIZE 2
  C_BUF_TYPE IBUFDS
} {
  IBUF_DS_P daisy_p_i
  IBUF_DS_N daisy_n_i
}

# Create util_ds_buf
cell xilinx.com:ip:util_ds_buf:2.1 buf_1 {
  C_SIZE 2
  C_BUF_TYPE OBUFDS
} {
  OBUF_DS_P daisy_p_o
  OBUF_DS_N daisy_n_o
}

# Create axis_red_pitaya_adc
cell pavel-demin:user:axis_red_pitaya_adc:1.0 adc_0 {} {
  adc_clk_p adc_clk_p_i
  adc_clk_n adc_clk_n_i
  adc_dat_a adc_dat_a_i
  adc_dat_b adc_dat_b_i
  adc_csn adc_csn_o
}

# Create c_counter_binary
cell xilinx.com:ip:c_counter_binary:12.0 cntr_0 {
  Output_Width 32
} {
  CLK adc_0/adc_clk
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_0 {
  DIN_WIDTH 32 DIN_FROM 26 DIN_TO 26 DOUT_WIDTH 1
} {
  Din cntr_0/Q
  Dout led_o
}

# Create axi_cfg_register
cell pavel-demin:user:axi_cfg_register:1.0 cfg_0 {
  CFG_DATA_WIDTH 96
  AXI_ADDR_WIDTH 32
  AXI_DATA_WIDTH 32
}

# Create all required interconnections
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config {
  Master /ps_0/M_AXI_GP0
  Clk Auto
} [get_bd_intf_pins cfg_0/S_AXI]

set_property RANGE 4K [get_bd_addr_segs ps_0/Data/SEG_cfg_0_reg0]
set_property OFFSET 0x40000000 [get_bd_addr_segs ps_0/Data/SEG_cfg_0_reg0]

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_1 {
  DIN_WIDTH 96 DIN_FROM 0 DIN_TO 0 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_2 {
  DIN_WIDTH 96 DIN_FROM 1 DIN_TO 1 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_3 {
  DIN_WIDTH 96 DIN_FROM 2 DIN_TO 2 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_4 {
  DIN_WIDTH 96 DIN_FROM 63 DIN_TO 32 DOUT_WIDTH 32
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_5 {
  DIN_WIDTH 96 DIN_FROM 79 DIN_TO 64 DOUT_WIDTH 16
} {
  Din cfg_0/cfg_data
}

# Create xlconstant
cell xilinx.com:ip:xlconstant:1.1 const_0

# Create axis_clock_converter
cell xilinx.com:ip:axis_clock_converter:1.1 fifo_0 {} {
  S_AXIS adc_0/M_AXIS
  s_axis_aclk adc_0/adc_clk
  s_axis_aresetn const_0/dout
  m_axis_aclk ps_0/FCLK_CLK0
  m_axis_aresetn slice_1/Dout
}

# Create axis_subset_converter
cell xilinx.com:ip:axis_subset_converter:1.1 subset_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  M_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 4
  M_TDATA_NUM_BYTES 2
  TDATA_REMAP {tdata[31:16]}
} {
  S_AXIS fifo_0/M_AXIS
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create axis_constant
cell pavel-demin:user:axis_constant:1.0 phase_0 {
  AXIS_TDATA_WIDTH 32
} {
  cfg_data slice_4/Dout
  aclk ps_0/FCLK_CLK0
}

# Create dds_compiler
cell xilinx.com:ip:dds_compiler:6.0 dds_0 {
  DDS_CLOCK_RATE 125
  SPURIOUS_FREE_DYNAMIC_RANGE 138
  FREQUENCY_RESOLUTION 0.2
  PHASE_INCREMENT Streaming
  DSP48_USE Maximal
  HAS_TREADY true
  HAS_PHASE_OUT false
  PHASE_WIDTH 30
  OUTPUT_WIDTH 24
} {
  S_AXIS_PHASE phase_0/M_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create axis_lfsr
cell pavel-demin:user:axis_lfsr:1.0 lfsr_0 {} {
  aclk ps_0/FCLK_CLK0
  aresetn slice_1/Dout
}

# Create cmpy
cell xilinx.com:ip:cmpy:6.0 mult_0 {
  FLOWCONTROL Blocking
  APORTWIDTH.VALUE_SRC USER
  BPORTWIDTH.VALUE_SRC USER
  APORTWIDTH 14
  BPORTWIDTH 24
  ROUNDMODE Random_Rounding
  OUTPUTWIDTH 33
} {
  S_AXIS_A subset_0/M_AXIS
  S_AXIS_B dds_0/M_AXIS_DATA
  S_AXIS_CTRL lfsr_0/M_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create axis_broadcaster
cell xilinx.com:ip:axis_broadcaster:1.1 bcast_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  M_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 10
  M_TDATA_NUM_BYTES 4
  M00_TDATA_REMAP {tdata[71:40]}
  M01_TDATA_REMAP {tdata[31:0]}
} {
  S_AXIS mult_0/M_AXIS_DOUT
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create xlconstant
cell xilinx.com:ip:xlconstant:1.1 const_1

# Create axis_constant
cell pavel-demin:user:axis_constant:1.0 rate_0 {
  AXIS_TDATA_WIDTH 16
} {
  cfg_data slice_5/Dout
  aclk ps_0/FCLK_CLK0
}

# Create axis_packetizer
cell pavel-demin:user:axis_packetizer:1.0 pktzr_0 {
  AXIS_TDATA_WIDTH 16
  CNTR_WIDTH 1
  CONTINUOUS FALSE
} {
  S_AXIS rate_0/M_AXIS
  cfg_data const_1/dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_3/Dout
}

# Create axis_constant
cell pavel-demin:user:axis_constant:1.0 rate_1 {
  AXIS_TDATA_WIDTH 16
} {
  cfg_data slice_5/Dout
  aclk ps_0/FCLK_CLK0
}

# Create axis_packetizer
cell pavel-demin:user:axis_packetizer:1.0 pktzr_1 {
  AXIS_TDATA_WIDTH 16
  CNTR_WIDTH 1
  CONTINUOUS FALSE
} {
  S_AXIS rate_1/M_AXIS
  cfg_data const_1/dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_3/Dout
}

# Create cic_compiler
cell xilinx.com:ip:cic_compiler:4.0 cic_0 {
  INPUT_DATA_WIDTH.VALUE_SRC USER
  FILTER_TYPE Decimation
  NUMBER_OF_STAGES 6
  SAMPLE_RATE_CHANGES Programmable
  MINIMUM_RATE 10
  MAXIMUM_RATE 25
  FIXED_OR_INITIAL_RATE 25
  INPUT_SAMPLE_FREQUENCY 125
  CLOCK_FREQUENCY 125
  INPUT_DATA_WIDTH 32
  QUANTIZATION Truncation
  OUTPUT_DATA_WIDTH 32
  HAS_ARESETN true
} {
  S_AXIS_DATA bcast_0/M00_AXIS
  S_AXIS_CONFIG pktzr_0/M_AXIS
  aclk ps_0/FCLK_CLK0
  aresetn slice_3/Dout
}

# Create cic_compiler
cell xilinx.com:ip:cic_compiler:4.0 cic_1 {
  INPUT_DATA_WIDTH.VALUE_SRC USER
  FILTER_TYPE Decimation
  NUMBER_OF_STAGES 6
  SAMPLE_RATE_CHANGES Programmable
  MINIMUM_RATE 10
  MAXIMUM_RATE 25
  FIXED_OR_INITIAL_RATE 25
  INPUT_SAMPLE_FREQUENCY 125
  CLOCK_FREQUENCY 125
  INPUT_DATA_WIDTH 32
  QUANTIZATION Truncation
  OUTPUT_DATA_WIDTH 32
  HAS_ARESETN true
} {
  S_AXIS_DATA bcast_0/M01_AXIS
  S_AXIS_CONFIG pktzr_1/M_AXIS
  aclk ps_0/FCLK_CLK0
  aresetn slice_3/Dout
}

# Create axis_combiner
cell  xilinx.com:ip:axis_combiner:1.1 comb_0 {
  TDATA_NUM_BYTES.VALUE_SRC USER
  TDATA_NUM_BYTES 4
} {
  S00_AXIS cic_0/M_AXIS_DATA
  S01_AXIS cic_1/M_AXIS_DATA
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create fir_compiler
cell xilinx.com:ip:fir_compiler:7.2 fir_0 {
  DATA_WIDTH.VALUE_SRC USER
  DATA_WIDTH 32
  COEFFICIENTVECTOR {-1.64521413942845e-08, -4.70463668438465e-08, -6.72409927344397e-10, 3.07578662579966e-08, 1.83405635327602e-08, 3.25477693857275e-08, -5.99680929342399e-09, -1.5137025292098e-07, -8.29554289149286e-08, 3.1264939018698e-07, 3.04421582831343e-07, -4.71283103331293e-07, -7.10161527267038e-07, 5.4385729021948e-07, 1.3279852076706e-06, -4.1117405144239e-07, -2.13948797993807e-06, -6.83561249755633e-08, 3.05943454028865e-06, 1.03267998260638e-06, -3.92359634371531e-06, -2.57947486942207e-06, 4.49145349269754e-06, 4.72407726442359e-06, -4.46895334200653e-06, -7.36056579338443e-06, 3.55313976850081e-06, 1.02366981350485e-05, -1.49583179034168e-06, -1.29538636908795e-05, -1.82224732876802e-06, 1.50007872051256e-05, 6.32071272235331e-06, -1.58247950337274e-05, -1.16700384802333e-05, 1.49361033633344e-05, 1.72799653653394e-05, -1.20365228391325e-05, -2.23487214350782e-05, 7.13993035196049e-06, 2.59674705494722e-05, -6.70259619206908e-07, -2.72890775937914e-05, -6.5039038391019e-06, 2.57361870719854e-05, 1.31211552706201e-05, -2.12178211025511e-05, -1.76824702115928e-05, 1.43098032839744e-05, 1.8708129670829e-05, -6.34987454039391e-06, -1.50737626194867e-05, -5.98994038022198e-07, 6.37899588102335e-06, 3.94876694485887e-06, 6.71680116179889e-06, -9.58171780877038e-07, -2.22697675437372e-05, -1.07493731900781e-05, 3.70108470233797e-05, 3.25705431524593e-05, -4.65759532437539e-05, -6.43494267241976e-05, 4.5968317328006e-05, 0.000103881715849471, -3.03234648252974e-05, -0.000146700701312491, -4.15946382849241e-06, 0.000186209884128992, 5.92215559275127e-05, -0.000214241117275704, -0.000133655578841879, 0.00022204239224294, 0.000222713668618243, -0.000201624461030017, -0.00031799410007056, 0.000147309914692859, 0.000407943781569972, -5.72570877918142e-05, -0.000479037062991995, -6.53204632789459e-05, 0.000517582577782643, 0.000211525093233361, -0.000512003809569966, -0.000367038967087839, 0.000455188386961159, 0.000513238625339441, -0.000346817281548083, -0.000629552355493672, 0.000194843797855226, 0.000696548082252426, -1.59892992581828e-05, -0.000699615843408489, -0.000165187836039896, 0.000632701106107481, 0.00031880982400301, -0.000501477798589567, -0.000413739477294317, 0.000325299852631003, 0.000422875056823753, -0.00013732745389589, -0.000329116376470643, -1.76245716386083e-05, 0.000131208741634884, 8.77099025540619e-05, 0.000151475203609822, -2.10142775591302e-05, -0.000476247827020124, -0.000225853818706324, 0.000776916756524221, 0.000677589741153869, -0.000967929407810648, -0.00133111435318069, 0.000951484983718656, 0.00214743811169186, -0.000628598650963854, -0.00304664110052968, -8.70363411589031e-05, 0.00390698359954996, 0.00125350709672583, -0.00456901819620271, -0.00288500226277749, 0.00484506168885358, 0.00493773182078465, -0.00453377951523747, -0.00729915991987155, 0.00343897670855582, 0.00978195904715139, -0.00139108716048867, -0.0121234776133697, -0.0017306012408027, 0.0139903337466718, 0.00597601001426184, -0.0149894279287695, -0.0113092451078452, 0.0146755931452246, 0.0175933796437649, -0.0125594828739035, -0.0245835384320303, 0.00809895179397087, 0.0319208980787343, -0.000657155466828888, -0.0391192823095357, -0.0106151077806068, 0.0455165359236878, 0.0270795839942354, -0.0500998920705544, -0.0514125870964204, 0.0508425210865216, 0.0900753216537182, -0.0415989300995586, -0.162987207771257, -0.0101944407670078, 0.355935950205162, 0.553731290606773, 0.355935950205162, -0.0101944407670078, -0.162987207771257, -0.0415989300995585, 0.0900753216537182, 0.0508425210865216, -0.0514125870964203, -0.0500998920705544, 0.0270795839942354, 0.0455165359236878, -0.0106151077806068, -0.0391192823095356, -0.000657155466828882, 0.0319208980787343, 0.00809895179397083, -0.0245835384320303, -0.0125594828739035, 0.0175933796437649, 0.0146755931452245, -0.0113092451078452, -0.0149894279287695, 0.00597601001426183, 0.0139903337466718, -0.0017306012408027, -0.0121234776133697, -0.00139108716048867, 0.00978195904715139, 0.00343897670855583, -0.00729915991987155, -0.00453377951523748, 0.00493773182078462, 0.00484506168885358, -0.00288500226277748, -0.00456901819620271, 0.00125350709672582, 0.00390698359954996, -8.70363411589127e-05, -0.00304664110052968, -0.000628598650963864, 0.00214743811169186, 0.000951484983718664, -0.00133111435318069, -0.000967929407810641, 0.000677589741153871, 0.000776916756524221, -0.000225853818706328, -0.000476247827020107, -2.10142775591293e-05, 0.000151475203609811, 8.77099025540591e-05, 0.000131208741634889, -1.76245716386039e-05, -0.000329116376470647, -0.000137327453895895, 0.000422875056823753, 0.000325299852631007, -0.000413739477294308, -0.00050147779858957, 0.000318809824002999, 0.000632701106107483, -0.000165187836039891, -0.000699615843408488, -1.59892992582131e-05, 0.000696548082252426, 0.000194843797855243, -0.000629552355493673, -0.000346817281548094, 0.000513238625339439, 0.000455188386961164, -0.000367038967087838, -0.000512003809569969, 0.00021152509323336, 0.000517582577782644, -6.53204632789448e-05, -0.00047903706299199, -5.72570877918146e-05, 0.000407943781569973, 0.000147309914692859, -0.000317994100070557, -0.000201624461030018, 0.000222713668618243, 0.00022204239224294, -0.000133655578841882, -0.000214241117275704, 5.92215559275119e-05, 0.000186209884128992, -4.15946382849293e-06, -0.000146700701312491, -3.03234648252964e-05, 0.00010388171584947, 4.59683173280035e-05, -6.43494267241975e-05, -4.65759532437536e-05, 3.25705431524593e-05, 3.70108470233783e-05, -1.07493731900781e-05, -2.2269767543738e-05, -9.58171780877069e-07, 6.7168011617992e-06, 3.94876694485918e-06, 6.37899588102239e-06, -5.98994038022246e-07, -1.50737626194877e-05, -6.34987454039382e-06, 1.87081296708295e-05, 1.43098032839742e-05, -1.76824702115925e-05, -2.1217821102551e-05, 1.31211552706199e-05, 2.57361870719852e-05, -6.50390383910076e-06, -2.72890775937914e-05, -6.70259619206912e-07, 2.59674705494723e-05, 7.13993035196073e-06, -2.23487214350781e-05, -1.20365228391322e-05, 1.72799653653394e-05, 1.49361033633344e-05, -1.16700384802333e-05, -1.58247950337276e-05, 6.32071272235337e-06, 1.50007872051255e-05, -1.82224732876802e-06, -1.29538636908796e-05, -1.49583179034166e-06, 1.02366981350488e-05, 3.55313976850081e-06, -7.36056579338458e-06, -4.46895334200659e-06, 4.72407726442355e-06, 4.49145349269753e-06, -2.57947486942207e-06, -3.92359634371533e-06, 1.03267998260634e-06, 3.05943454028864e-06, -6.83561249755839e-08, -2.13948797993805e-06, -4.11174051442377e-07, 1.32798520767059e-06, 5.43857290219452e-07, -7.1016152726704e-07, -4.71283103331285e-07, 3.04421582831339e-07, 3.12649390186954e-07, -8.29554289149243e-08, -1.51370252920976e-07, -5.99680929342391e-09, 3.25477693857259e-08, 1.83405635327584e-08, 3.07578662580052e-08, -6.72409927343936e-10, -4.70463668438435e-08, -1.64521413942853e-08}
  COEFFICIENT_WIDTH 32
  QUANTIZATION Quantize_Only
  BESTPRECISION true
  FILTER_TYPE Decimation
  DECIMATION_RATE 2
  NUMBER_PATHS 2
  RATESPECIFICATION Input_Sample_Period
  SAMPLEPERIOD 125
  OUTPUT_ROUNDING_MODE Truncate_LSBs
  OUTPUT_WIDTH 16
} {
  S_AXIS_DATA comb_0/M_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create axis_dwidth_converter
cell xilinx.com:ip:axis_dwidth_converter:1.1 conv_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 4
  M_TDATA_NUM_BYTES 8
} {
  S_AXIS fir_0/M_AXIS_DATA
  aclk ps_0/FCLK_CLK0
  aresetn slice_2/Dout
}

# Create xlconstant
cell xilinx.com:ip:xlconstant:1.1 const_2 {
  CONST_WIDTH 32
  CONST_VAL 503316480
}

# Create axis_ram_writer
cell pavel-demin:user:axis_ram_writer:1.0 writer_0 {
  ADDR_WIDTH 15
} {
  S_AXIS conv_0/M_AXIS
  M_AXI ps_0/S_AXI_HP0
  cfg_data const_2/dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_2/Dout
}

assign_bd_address [get_bd_addr_segs ps_0/S_AXI_HP0/HP0_DDR_LOWOCM]

# Create axi_sts_register
cell pavel-demin:user:axi_sts_register:1.0 sts_0 {
  STS_DATA_WIDTH 32
  AXI_ADDR_WIDTH 32
  AXI_DATA_WIDTH 32
} {
  sts_data writer_0/sts_data
}

# Create all required interconnections
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config {
  Master /ps_0/M_AXI_GP0
  Clk Auto
} [get_bd_intf_pins sts_0/S_AXI]

set_property RANGE 4K [get_bd_addr_segs ps_0/Data/SEG_sts_0_reg0]
set_property OFFSET 0x40001000 [get_bd_addr_segs ps_0/Data/SEG_sts_0_reg0]
