
source projects/cfg_test/block_design.tcl

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_2 {
  DIN_WIDTH 1024 DIN_FROM 0 DIN_TO 0 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_3 {
  DIN_WIDTH 1024 DIN_FROM 1 DIN_TO 1 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_4 {
  DIN_WIDTH 1024 DIN_FROM 2 DIN_TO 2 DOUT_WIDTH 1
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_5 {
  DIN_WIDTH 1024 DIN_FROM 63 DIN_TO 32 DOUT_WIDTH 48
} {
  Din cfg_0/cfg_data
}

# Create xlslice
cell xilinx.com:ip:xlslice:1.0 slice_6 {
  DIN_WIDTH 1024 DIN_FROM 95 DIN_TO 64 DOUT_WIDTH 48
} {
  Din cfg_0/cfg_data
}

# Create axis_subset_converter
cell xilinx.com:ip:axis_subset_converter:1.1 subset_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  M_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 4
  M_TDATA_NUM_BYTES 8
  TDATA_REMAP {tdata[14:0],49'b0000000000000000000000000000000000000000000000000}
} {
  S_AXIS adc_0/M_AXIS
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create axis_phase_generator
cell pavel-demin:user:axis_phase_generator:1.0 phase_0 {
  AXIS_TDATA_WIDTH 32
  PHASE_WIDTH 30
} {
  cfg_data slice_5/Dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_2/Dout
}

# Create cordic
cell xilinx.com:ip:cordic:6.0 cordic_0 {
  INPUT_WIDTH.VALUE_SRC USER
  PIPELINING_MODE Optimal
  PHASE_FORMAT Scaled_Radians
  INPUT_WIDTH 32
  OUTPUT_WIDTH 32
  ROUND_MODE Round_Pos_Neg_Inf
  COMPENSATION_SCALING Embedded_Multiplier
} {
  S_AXIS_CARTESIAN subset_0/M_AXIS
  S_AXIS_PHASE phase_0/M_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create axis_broadcaster
cell xilinx.com:ip:axis_broadcaster:1.1 bcast_0 {
  S_TDATA_NUM_BYTES.VALUE_SRC USER
  M_TDATA_NUM_BYTES.VALUE_SRC USER
  S_TDATA_NUM_BYTES 8
  M_TDATA_NUM_BYTES 4
  M00_TDATA_REMAP {tdata[31:0]}
  M01_TDATA_REMAP {tdata[63:32]}
} {
  S_AXIS cordic_0/M_AXIS_DOUT
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create cic_compiler
cell xilinx.com:ip:cic_compiler:4.0 cic_0 {
  INPUT_DATA_WIDTH.VALUE_SRC USER
  FILTER_TYPE Decimation
  NUMBER_OF_STAGES 4
  DIFFERENTIAL_DELAY 2
  FIXED_OR_INITIAL_RATE 2048
  INPUT_SAMPLE_FREQUENCY 125
  CLOCK_FREQUENCY 125
  INPUT_DATA_WIDTH 32
  QUANTIZATION Truncation
  OUTPUT_DATA_WIDTH 32
} {
  S_AXIS_DATA bcast_0/M00_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create cic_compiler
cell xilinx.com:ip:cic_compiler:4.0 cic_1 {
  INPUT_DATA_WIDTH.VALUE_SRC USER
  FILTER_TYPE Decimation
  NUMBER_OF_STAGES 4
  DIFFERENTIAL_DELAY 2
  FIXED_OR_INITIAL_RATE 2048
  INPUT_SAMPLE_FREQUENCY 125
  CLOCK_FREQUENCY 125
  INPUT_DATA_WIDTH 32
  QUANTIZATION Truncation
  OUTPUT_DATA_WIDTH 32
} {
  S_AXIS_DATA bcast_0/M01_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create axis_combiner
cell  xilinx.com:ip:axis_combiner:1.1 comb_0 {
  TDATA_NUM_BYTES.VALUE_SRC USER
  TDATA_NUM_BYTES 4
} {
  S00_AXIS cic_0/M_AXIS_DATA
  S01_AXIS cic_1/M_AXIS_DATA
  aclk ps_0/FCLK_CLK0
  aresetn rst_0/peripheral_aresetn
}

# Create fir_compiler
cell xilinx.com:ip:fir_compiler:7.2 fir_0 {
  DATA_WIDTH.VALUE_SRC USER
  DATA_WIDTH 32
  COEFFICIENT_WIDTH 24
  COEFFICIENT_SIGN Signed
  COEFFICIENTVECTOR {5, 49, -3, -87, -84, 12, 71, 3, -107, -101, 26, 103, 14, -125, -115, 47, 145, 34, -140, -125, 78, 198, 61, -151, -132, 117, 263, 95, -162, -138, 163, 337, 135, -174, -145, 213, 419, 175, -192, -157, 264, 503, 212, -221, -182, 309, 584, 240, -268, -225, 344, 658, 253, -340, -291, 362, 719, 246, -440, -386, 361, 764, 216, -572, -512, 339, 794, 164, -737, -668, 299, 812, 92, -930, -849, 247, 825, 9, -1144, -1047, 192, 843, -75, -1368, -1251, 149, 882, -146, -1587, -1444, 133, 959, -186, -1786, -1612, 160, 1089, -180, -1950, -1739, 247, 1288, -116, -2068, -1815, 404, 1566, 18, -2132, -1833, 637, 1928, 221, -2143, -1796, 942, 2370, 488, -2110, -1715, 1309, 2877, 802, -2052, -1610, 1715, 3429, 1138, -1998, -1510, 2131, 3993, 1464, -1981, -1451, 2522, 4534, 1741, -2042, -1473, 2850, 5015, 1932, -2218, -1612, 3079, 5401, 2003, -2544, -1901, 3180, 5666, 1928, -3043, -2360, 3136, 5798, 1697, -3724, -2995, 2948, 5798, 1316, -4578, -3792, 2634, 5692, 811, -5576, -4717, 2234, 5522, 228, -6669, -5718, 1804, 5351, -369, -7792, -6726, 1418, 5252, -904, -8869, -7665, 1156, 5308, -1297, -9821, -8453, 1097, 5599, -1472, -10574, -9020, 1313, 6191, -1364, -11070, -9312, 1854, 7132, -935, -11279, -9302, 2743, 8438, -178, -11200, -8999, 3965, 10087, 879, -10872, -8448, 5470, 12022, 2167, -10374, -7733, 7167, 14146, 3581, -9818, -6974, 8935, 16331, 4987, -9344, -6314, 10627, 18432, 6234, -9108, -5907, 12092, 20295, 7169, -9262, -5905, 13184, 21781, 7655, -9942, -6435, 13786, 22779, 7586, -11245, -7585, 13821, 23226, 6908, -13216, -9386, 13274, 23120, 5630, -15835, -11805, 12196, 22526, 3830, -19015, -14738, 10708, 21580, 1653, -22596, -18012, 8998, 20483, -691, -26365, -21403, 7303, 19483, -2950, -30063, -24646, 5897, 18857, -4849, -33419, -27467, 5056, 18879, -6119, -36173, -29613, 5031, 19795, -6529, -38110, -30878, 6019, 21788, -5917, -39086, -31136, 8132, 24951, -4214, -39061, -30366, 11375, 29269, -1463, -38105, -28663, 15635, 34607, 2172, -36414, -26241, 20682, 40713, 6409, -34295, -23427, 26175, 47231, 10869, -32150, -20638, 31694, 53732, 15106, -30443, -18340, 36775, 59751, 18647, -29656, -17011, 40958, 64839, 21039, -30237, -17083, 43834, 68606, 21906, -32554, -18897, 45099, 70783, 20993, -36842, -22655, 44602, 71254, 18211, -43168, -28379, 42373, 70097, 13662, -51403, -35898, 38643, 67589, 7650, -61219, -44837, 33845, 64210, 674, -72102, -54645, 28588, 60608, -6607, -83389, -64625, 23617, 57557, -13426, -94322, -74002, 19747, 55890, -18973, -104121, -81991, 17791, 56424, -22475, -112065, -87884, 18475, 59872, -23282, -117579, -91131, 22358, 66770, -20949, -120312, -91420, 29755, 77400, -15296, -120202, -88738, 40684, 91741, -6468, -117527, -83412, 54832, 109446, 5052, -112917, -76120, 71551, 129844, 18447, -107351, -67877, 89891, 151977, 32609, -102107, -59980, 108656, 174673, 46206, -98696, -53935, 126502, 196648, 57790, -98766, -51353, 142045, 216625, 65904, -103996, -53841, 153999, 233481, 69219, -115981, -62886, 161310, 246394, 66664, -136134, -79751, 163288, 254995, 57541, -165610, -105405, 159737, 259513, 41627, -205277, -140486, 151051, 260924, 19252, -255753, -185345, 138310, 261115, -8655, -317539, -240179, 123352, 263099, -40532, -391307, -305325, 108871, 271387, -74129, -478444, -381831, 98591, 292729, -106355, -582085, -472608, 97639, 337766, -132759, -709266, -585010, 113392, 425161, -145829, -875945, -737628, 157418, 593386, -128659, -1120926, -982734, 249197, 942295, -24414, -1553924, -1510331, 407752, 1840005, 507823, -2556496, -3527905, -36823, 5626266, 8388607, 5626266, -36823, -3527905, -2556496, 507823, 1840005, 407752, -1510331, -1553924, -24414, 942295, 249197, -982734, -1120926, -128659, 593386, 157418, -737628, -875945, -145829, 425161, 113392, -585010, -709266, -132759, 337766, 97639, -472608, -582085, -106355, 292729, 98591, -381831, -478444, -74129, 271387, 108871, -305325, -391307, -40532, 263099, 123352, -240179, -317539, -8655, 261115, 138310, -185345, -255753, 19252, 260924, 151051, -140486, -205277, 41627, 259513, 159737, -105405, -165610, 57541, 254995, 163288, -79751, -136134, 66664, 246394, 161310, -62886, -115981, 69219, 233481, 153999, -53841, -103996, 65904, 216625, 142045, -51353, -98766, 57790, 196648, 126502, -53935, -98696, 46206, 174673, 108656, -59980, -102107, 32609, 151977, 89891, -67877, -107351, 18447, 129844, 71551, -76120, -112917, 5052, 109446, 54832, -83412, -117527, -6468, 91741, 40684, -88738, -120202, -15296, 77400, 29755, -91420, -120312, -20949, 66770, 22358, -91131, -117579, -23282, 59872, 18475, -87884, -112065, -22475, 56424, 17791, -81991, -104121, -18973, 55890, 19747, -74002, -94322, -13426, 57557, 23617, -64625, -83389, -6607, 60608, 28588, -54645, -72102, 674, 64210, 33845, -44837, -61219, 7650, 67589, 38643, -35898, -51403, 13662, 70097, 42373, -28379, -43168, 18211, 71254, 44602, -22655, -36842, 20993, 70783, 45099, -18897, -32554, 21906, 68606, 43834, -17083, -30237, 21039, 64839, 40958, -17011, -29656, 18647, 59751, 36775, -18340, -30443, 15106, 53732, 31694, -20638, -32150, 10869, 47231, 26175, -23427, -34295, 6409, 40713, 20682, -26241, -36414, 2172, 34607, 15635, -28663, -38105, -1463, 29269, 11375, -30366, -39061, -4214, 24951, 8132, -31136, -39086, -5917, 21788, 6019, -30878, -38110, -6529, 19795, 5031, -29613, -36173, -6119, 18879, 5056, -27467, -33419, -4849, 18857, 5897, -24646, -30063, -2950, 19483, 7303, -21403, -26365, -691, 20483, 8998, -18012, -22596, 1653, 21580, 10708, -14738, -19015, 3830, 22526, 12196, -11805, -15835, 5630, 23120, 13274, -9386, -13216, 6908, 23226, 13821, -7585, -11245, 7586, 22779, 13786, -6435, -9942, 7655, 21781, 13184, -5905, -9262, 7169, 20295, 12092, -5907, -9108, 6234, 18432, 10627, -6314, -9344, 4987, 16331, 8935, -6974, -9818, 3581, 14146, 7167, -7733, -10374, 2167, 12022, 5470, -8448, -10872, 879, 10087, 3965, -8999, -11200, -178, 8438, 2743, -9302, -11279, -935, 7132, 1854, -9312, -11070, -1364, 6191, 1313, -9020, -10574, -1472, 5599, 1097, -8453, -9821, -1297, 5308, 1156, -7665, -8869, -904, 5252, 1418, -6726, -7792, -369, 5351, 1804, -5718, -6669, 228, 5522, 2234, -4717, -5576, 811, 5692, 2634, -3792, -4578, 1316, 5798, 2948, -2995, -3724, 1697, 5798, 3136, -2360, -3043, 1928, 5666, 3180, -1901, -2544, 2003, 5401, 3079, -1612, -2218, 1932, 5015, 2850, -1473, -2042, 1741, 4534, 2522, -1451, -1981, 1464, 3993, 2131, -1510, -1998, 1138, 3429, 1715, -1610, -2052, 802, 2877, 1309, -1715, -2110, 488, 2370, 942, -1796, -2143, 221, 1928, 637, -1833, -2132, 18, 1566, 404, -1815, -2068, -116, 1288, 247, -1739, -1950, -180, 1089, 160, -1612, -1786, -186, 959, 133, -1444, -1587, -146, 882, 149, -1251, -1368, -75, 843, 192, -1047, -1144, 9, 825, 247, -849, -930, 92, 812, 299, -668, -737, 164, 794, 339, -512, -572, 216, 764, 361, -386, -440, 246, 719, 362, -291, -340, 253, 658, 344, -225, -268, 240, 584, 309, -182, -221, 212, 503, 264, -157, -192, 175, 419, 213, -145, -174, 135, 337, 163, -138, -162, 95, 263, 117, -132, -151, 61, 198, 78, -125, -140, 34, 145, 47, -115, -125, 14, 103, 26, -101, -107, 3, 71, 12, -84, -87, -3, 49, 5}
  FILTER_TYPE Decimation
  DECIMATION_RATE 2
  NUMBER_PATHS 2
  SAMPLE_FREQUENCY 0.062
  CLOCK_FREQUENCY 125
  OUTPUT_ROUNDING_MODE Truncate_LSBs
  OUTPUT_WIDTH 47
} {
  S_AXIS_DATA comb_0/M_AXIS
  aclk ps_0/FCLK_CLK0
}

# Create cordic
cell xilinx.com:ip:cordic:6.0 cordic_1 {
  INPUT_WIDTH.VALUE_SRC USER
  FUNCTIONAL_SELECTION Translate
  PIPELINING_MODE Optimal
  PHASE_FORMAT Scaled_Radians
  INPUT_WIDTH 48
  OUTPUT_WIDTH 32
  ROUND_MODE Round_Pos_Neg_Inf
  COMPENSATION_SCALING Embedded_Multiplier
} {
  S_AXIS_CARTESIAN fir_0/M_AXIS_DATA
  aclk ps_0/FCLK_CLK0
}

# Create axis_packetizer
cell pavel-demin:user:axis_packetizer:1.0 pktzr_0 {
  AXIS_TDATA_WIDTH 32
  CNTR_WIDTH 32
  CONTINUOUS FALSE
} {
  S_AXIS cordic_0/M_AXIS_DOUT
  cfg_data slice_6/Dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_3/Dout
}

# Create xlconstant
cell xilinx.com:ip:xlconstant:1.1 const_1 {
  CONST_WIDTH 32
  CONST_VAL 503316480
}

# Create axis_ram_writer
cell pavel-demin:user:axis_ram_writer:1.0 writer_0 {} {
  S_AXIS pktzr_0/M_AXIS
  M_AXI ps_0/S_AXI_HP0
  cfg_data const_1/dout
  aclk ps_0/FCLK_CLK0
  aresetn slice_4/Dout
}

assign_bd_address [get_bd_addr_segs ps_0/S_AXI_HP0/HP0_DDR_LOWOCM]
